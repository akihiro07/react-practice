{"version":3,"sources":["api.js","App.js","index.js"],"names":["fetchImages","breed","a","fetch","response","json","data","message","Loading","Form","props","onSubmit","event","console","log","preventDefault","target","elements","onFormSubmit","value","className","name","defaultValue","type","Header","Image","src","alt","Gallery","urls","map","url","Main","useState","setUrls","useEffect","then","Footer","href","App","render","document","querySelector"],"mappings":"kNAAaA,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACFC,MAAM,6BAAD,OAA8BF,EAA9B,sBADH,cACnBG,EADmB,gBAGNA,EAASC,OAHH,cAGnBC,EAHmB,yBAKlBA,EAAKC,SALa,2CAAH,sDCGlBC,EAAU,WACd,OAAO,4CAGHC,EAAO,SAACC,GASZ,OACE,8BACE,sBAAMC,SAVW,SAACC,GACpBC,QAAQC,IAAIF,GAEZA,EAAMG,iBAHwB,IAItBd,EAAUW,EAAMI,OAAOC,SAAvBhB,MACRS,EAAMQ,aAAajB,EAAMkB,QAKvB,SACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,yBAAQC,KAAK,QAAQC,aAAa,QAAlC,UACE,wBAAQH,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,0BAIN,qBAAKC,UAAU,UAAf,SACE,wBAAQG,KAAK,SAASH,UAAU,iBAAhC,8BAUNI,EAAS,WACb,OACE,wBAAQJ,UAAU,uBAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,oCAOJK,EAAQ,SAACf,GAAW,IAChBgB,EAAQhB,EAARgB,IACR,OACE,qBAAKN,UAAU,OAAf,SACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,QAAlB,SACE,qBACEM,IAAMA,EACNC,IAAI,qBASVC,EAAU,SAAClB,GAAW,IAClBmB,EAASnB,EAATmB,KAER,OAAa,OAATA,EACK,cAAC,EAAD,IAIP,qBAAKT,UAAU,oCAAf,SAEIS,EAAKC,KAAI,SAACC,GACR,OACE,qBAAiBX,UAAU,cAA3B,SACE,cAAC,EAAD,CAAOM,IAAMK,KADJA,SAWjBC,EAAO,WAAM,MAEOC,mBAAS,MAFhB,mBAEVJ,EAFU,KAEJK,EAFI,KAIjBC,qBAAU,WACRnC,EAAY,SACToC,MAAK,SAACP,GACLK,EAAQL,QAEX,IASH,OACE,iCACE,yBAAST,UAAU,UAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAMF,aAXO,SAACjB,GACpBD,EAAYC,GACTmC,MAAK,SAACP,GACLK,EAAQL,aAYV,yBAAST,UAAU,UAAnB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAASS,KAAOA,YAOpBQ,EAAS,WACb,OACE,wBAAQjB,UAAU,SAAlB,SACE,sBAAKA,UAAU,4BAAf,UACE,sEACA,4BACE,mBAAGkB,KAAK,gCAAR,uCAOGC,EAAM,WACjB,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QC5INC,iBAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,e","file":"static/js/main.a5f87b16.chunk.js","sourcesContent":["export const fetchImages = async (breed) => {\n  const response = await fetch(`https://dog.ceo/api/breed/${breed}/images/random/12`);\n\n  const data = await response.json();\n\n  return data.message;\n}","import { useEffect, useState } from \"react\";\nimport { fetchImages } from \"./api\";\n\nconst Loading = () => {\n  return <p>Loading...</p>;\n}\n\nconst Form = (props) => {\n  const handleSubmit = (event) => {\n    console.log(event);\n    // デフォルトの振る舞いでは、フォーム送信した後でページが”リロード”される為\n    event.preventDefault();\n    const { breed } = event.target.elements;\n    props.onFormSubmit(breed.value);\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"field has-addons\">\n          <div className=\"control is-expanded\">\n            <div className=\"select is-fullwidth\">\n              <select name=\"breed\" defaultValue=\"shiba\">\n                <option value=\"shiba\">Shiba</option>\n                <option value=\"akita\">Akita</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"control\">\n            <button type=\"submit\" className=\"button is-dark\">\n              Reload\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nconst Header = () => {\n  return (\n    <header className=\"hero is-dark is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">Cute Dog Images</h1>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nconst Image = (props) => {\n  const { src } = props;\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image\">\n          <img\n            src={ src }\n            alt=\"cute dog!\"\n          />\n        </figure>\n      </div>\n    </div>\n  )\n}\n\n// Image is child\nconst Gallery = (props) => {\n  const { urls } = props;\n\n  if (urls === null) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"columns is-vcentered is-multiline\">\n      {\n        urls.map((url) => {\n          return (\n            <div key={ url } className=\"column is-3\">\n              <Image src={ url } />\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\n// Gallery is child(Gallery's child is Image)\nconst Main = () => {\n  // [現在の値(null), 更新する為の”関数”] = useState(null)\n  const [urls, setUrls] = useState(null);\n\n  useEffect(() => {\n    fetchImages('shiba')\n      .then((urls) => {\n        setUrls(urls);\n      });\n  }, []);\n\n  const reloadImages = (breed) => {\n    fetchImages(breed)\n      .then((urls) => {\n        setUrls(urls);\n      });\n  }\n\n  return (\n    <main>\n      <section className=\"section\">\n        <div className=\"container\">\n          <Form onFormSubmit={ reloadImages } />\n        </div>\n      </section>\n\n      <section className=\"section\">\n        <div className=\"container\">\n          <Gallery urls={ urls } />\n        </div>\n      </section>\n    </main>\n  );\n}\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>Dog images are retrieved from Dog API</p>\n        <p>\n          <a href=\"https://dog.ceo/dog-api/about\">Donate to Dog API</a>\n        </p>\n      </div>\n    </footer>\n  );\n}\n\nexport const App = () => {\n  return (\n    <div>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  )\n}","import \"bulma/css/bulma.css\";\nimport { render } from 'react-dom';\nimport { App } from './App';\n\nrender(<App/>, document.querySelector('#content'));\n"],"sourceRoot":""}